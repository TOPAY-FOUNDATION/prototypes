/* ChainGPT Assistant Modal Styles */

.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  backdrop-filter: blur(4px);
}

.chainGptModal {
  background: var(--surface);
  border-radius: 1rem;
  width: 90%;
  max-width: 600px;
  max-height: 80vh;
  display: flex;
  flex-direction: column;
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  border: 1px solid var(--border);
}

.chainGptHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1.5rem;
  border-bottom: 1px solid var(--border);
  background: linear-gradient(135deg, var(--primary) 0%, var(--primary-hover) 100%);
  border-radius: 1rem 1rem 0 0;
}

.chainGptTitle {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  color: white;
}

.chainGptIcon {
  width: 2rem;
  height: 2rem;
  background: rgba(255, 255, 255, 0.2);
  border-radius: 0.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  font-size: 1rem;
}

.closeButton {
  background: rgba(255, 255, 255, 0.2);
  border: none;
  color: white;
  width: 2rem;
  height: 2rem;
  border-radius: 0.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  font-size: 1.25rem;
  transition: background 0.2s ease;
}

.closeButton:hover {
  background: rgba(255, 255, 255, 0.3);
}

.chainGptContent {
  display: flex;
  flex-direction: column;
  flex: 1;
  overflow: hidden;
}

.messagesContainer {
  flex: 1;
  padding: 1.5rem;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  max-height: 400px;
}

.messageContent {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.messageText {
  background: var(--border);
  padding: 0.75rem 1rem;
  border-radius: 0.75rem;
  color: var(--foreground);
  line-height: 1.5;
}

.messageTime {
  font-size: 0.75rem;
  color: var(--muted-foreground);
  text-align: right;
}

.typingIndicator {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1rem;
  background: var(--border);
  border-radius: 0.75rem;
  color: var(--muted-foreground);
}

.typingIndicator::after {
  content: '';
  width: 0.5rem;
  height: 0.5rem;
  background: var(--primary);
  border-radius: 50%;
  animation: pulse 1.5s infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 0.4; }
  50% { opacity: 1; }
}

.quickQuestions {
  padding: 0 1.5rem;
  border-top: 1px solid var(--border);
}

.quickQuestionsList {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  padding: 1rem 0;
}

.quickQuestionButton {
  background: var(--surface);
  border: 1px solid var(--border);
  color: var(--foreground);
  padding: 0.5rem 0.75rem;
  border-radius: 0.5rem;
  font-size: 0.875rem;
  cursor: pointer;
  transition: all 0.2s ease;
}

.quickQuestionButton:hover {
  background: var(--border);
  border-color: var(--primary);
}

.inputContainer {
  display: flex;
  gap: 0.75rem;
  padding: 1.5rem;
  border-top: 1px solid var(--border);
  background: var(--surface);
}

.messageInput {
  flex: 1;
  padding: 0.75rem 1rem;
  border: 1px solid var(--border);
  border-radius: 0.5rem;
  background: var(--background);
  color: var(--foreground);
  font-size: 0.875rem;
  resize: none;
  min-height: 2.5rem;
  max-height: 6rem;
}

.messageInput:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 2px rgba(var(--primary-rgb), 0.1);
}

.sendButton {
  background: var(--primary);
  color: white;
  border: none;
  padding: 0.75rem 1rem;
  border-radius: 0.5rem;
  cursor: pointer;
  font-weight: 500;
  transition: background 0.2s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 2.5rem;
}

.sendButton:hover {
  background: var(--primary-hover);
}

.sendButton:disabled {
  background: var(--muted);
  cursor: not-allowed;
}

/* Responsive Design */
@media (max-width: 768px) {
  .chainGptModal {
    width: 95%;
    max-height: 90vh;
  }
  
  .chainGptHeader {
    padding: 1rem;
  }
  
  .messagesContainer {
    padding: 1rem;
  }
  
  .inputContainer {
    padding: 1rem;
  }
}